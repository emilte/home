#!/usr/bin/env bash
# Utils sourced before anything else.

self="$HOME/.bash_utils"
echo Sourcing "$self"

function vsource {
	# Verbose source of path if it exists.
	# Usage: vsource <PATH> <FROM>
	# Example: vsource ~/.bashrc "here"
	arg_path=$1
	arg_from=$2 ; arg_from=${arg_from:=$("pwd")} # Set default parameter if missing.
	# shellcheck disable=SC1090
	[ -f "$arg_path" ] && echo "Sourcing $arg_path" && source "$arg_path"
}

function prepend_path {
	# Prepends some path to PATH, but prevents duplicates.
	arg_path=$1 # some path
	[ "${PATH#*"$arg_path":}" == "$PATH" ] && export PATH="$arg_path:$PATH"
}

function random-success {
    # Successful 1 in n times.
    n="$1"
    local random_number=$((RANDOM % n + 1)) # Generate a random number between 1 and n.
    
    [ "$random_number" -eq 1 ] && return 0 # Check if the random number is 1.
    return 1
}

function is_yes {
	ans=$(echo "$1" | tr "[:upper:]" "[:lower:]") # To lowercase.
    [ "$ans" = "y" ] || [ "$ans" = "yes" ]
    return $?
}


################################
#         Colored echo
################################

export COLOR_RESET="\033[0m"
export COLOR_RED="\033[31m"
export COLOR_GREEN="\033[32m"
export COLOR_CYAN="\033[36m"

function echo-color() {
	color="$1"
    shift # Shift all args to the left.
	msg="$*" # Capture all other args.
	echo -e "$color""$msg""$COLOR_RESET"
}

function echo-red() {
	echo-color "$COLOR_RED" "$@"
}

function echo-green() {
	echo-color "$COLOR_GREEN" "$@"
}


function echo-cyan() {
	echo-color "$COLOR_CYAN" "$@"
}
